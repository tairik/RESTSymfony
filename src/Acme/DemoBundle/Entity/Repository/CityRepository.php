<?php
/**
 * CityRepository
 *
 * @category   PHP5
 * @package    Entity
 * @subpackage Repository
 * @author     Tairik Jean da Costa <tairikme@hotmail.com>
 * @license    http://www.tairik.com/license/ BSD Licence
 * @link       https://tairik@bitbucket.org/tairik/simplerest.git
 */
namespace Acme\DemoBundle\Entity\Repository;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @category   PHP5
 * @package    Entity
 * @subpackage Repository
 * @author     Tairik Jean da Costa <tairikme@hotmail.com>
 * @license    http://www.tairik.ca/license/ BSD Licence
 * @link       https://tairik@bitbucket.org/tairik/simplerest.git
 */

class CityRepository extends EntityRepository
{

	/**
	 * getAllCitiesByRadius Gets all Cities by radius
	 *
	 * @param  latitude  $latitude  latitude
	 * @param  longitude $longitude longitude
	 * @param  integer   $radius    radius
	 * @param  integer   $offset    offset
	 * @param  integer   $limit     limit
	 *
	 * @return array
	 */
	public function getAllCitiesByRadius ($latitude, $longitude, $radius = 0, $offset = false, $limit = false)
	{
		$strSQL = 'SELECT C.id, C.name, C.status, C.latitude, C.longitude, C.state, ( 3959 * acos( cos( radians('.$latitude.') ) * cos( radians( C.latitude ) ) * cos( radians( C.longitude ) - radians('.$longitude.') ) + sin( radians('.$latitude.') ) * sin( radians( C.latitude ) ) ) ) AS distance
            FROM Acme\DemoBundle\Entity\City C HAVING distance < '.$radius.' ORDER BY distance';

        $query = $this->_em->createQuery($strSQL);
        if ($limit !== false) {
		    $query->setFirstResult($offset);
	        $query->setMaxResults($limit);
        }

        $result = $query->getResult();
        return $result;
	}
}