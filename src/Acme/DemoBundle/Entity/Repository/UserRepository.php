<?php
/**
 * UserRepository
 *
 * @category   PHP5
 * @package    Entity
 * @subpackage Repository
 * @author     Tairik Jean da Costa <tairikme@hotmail.com>
 * @license    http://www.tairik.com/license/ BSD Licence
 * @link       https://tairik@bitbucket.org/tairik/simplerest.git
 */
namespace Acme\DemoBundle\Entity\Repository;
use Doctrine\ORM\EntityRepository;
/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @category   PHP5
 * @package    Entity
 * @subpackage Repository
 * @author     Tairik Jean da Costa <tairikme@hotmail.com>
 * @license    http://www.tairik.ca/license/ BSD Licence
 * @link       https://tairik@bitbucket.org/tairik/simplerest.git
 */

class UserRepository extends EntityRepository
{
	/**
     * getLastFile Get last file
     *
     * @param integer $userid The userId associated to
     *
     * @return array Array with all photos
    */
    public function getLastFile($userId)
    {
        $strSQL = 'SELECT SUBSTRING(SUBSTRING(SUBSTRING(UP.photo, LOCATE(\'/\', UP.photo , 24)), 2), 1, LOCATE(\'.\', SUBSTRING(SUBSTRING(UP.photo, LOCATE(\'/\', UP.photo , 24)), 2))-1)  as File
                    FROM Acme\DemoBundle\Entity\UserPhoto UP
                    WHERE UP.userId = '.$userId.'
                    ORDER BY File DESC';
        $query = $this->_em->createQuery($strSQL);
        $result = $query->getResult();
        if (count($result) === 0) {
            $return = 1;
        } else {
            $aryTemp = array();
            foreach ($result as $key => $value) {
                array_push($aryTemp, (int)$value['File']);
            }
            rsort($aryTemp);
            $return = (int) $aryTemp[0] + 1;
        }
        return $return;
    }
}